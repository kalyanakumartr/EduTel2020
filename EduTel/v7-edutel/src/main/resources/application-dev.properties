
## MySQL
spring.datasource.url: jdbc:mysql://localhost:3306/mvnwidty_edutel_academy
spring.datasource.username: root
spring.datasource.password: root
spring.jpa.show-sql: true
spring.jpa.hibernate.naming.physical-strategy: org.hbs.security.resource.RealNamingStrategyImpl

spring.application.name: v7-edutel
spring.mvc.view.prefix: /WEB-INF/jsp/
spring.mvc.view.suffix: .jsp
spring.servlet.multipart.max-file-size=21MB
spring.servlet.multipart.max-request-size=21MB

server.address: localhost
server.port: 9900
server.servlet.context-path: /v7-edutel
eureka.client.serviceUrl.defaultZone: http://localhost:8761/eureka/
eureka.client.healthcheck.enabled: true
eureka.client.registerWithEureka: false
eureka.client.fetchRegistry: true


zuul.routes.v7-edutel.path: /v7-edutel/**
zuul.routes.v7-edutel.serviceId: v7-edutel

spring.kafka.consumer.bootstrap-servers: localhost:9092
spring.kafka.consumer.group-id: userId
spring.kafka.consumer.auto-offset-reset: earliest
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.listener.concurrency: 3
spring.kafka.listener.poll-timeout: 1

spring.kafka.producer.bootstrap-servers: localhost:9092
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.apache.kafka.common.serialization.StringSerializer

admin.update.delay.in.seconds: 10

##Key-Value pair seperated by comma
##
## profile#c:/edutel/users
##
application.physical.paths: profile#c:/edutel/users,attachment#c:/edutel/emails,tus#c:/tmp/tus,videos#c:/edutel/videos
server.edutel.video.resource.handler: videos
server.edutel.video.directory: c:/edutel/videos
server.temp.directory: c:/tmp/tus
#Tutor Names seperated by commos
tutor.names.list: Thiyagarajan, Tamil, Ananth B    , Kalyan
#For detailed logging during development
 
# output to a file
#logging.file: v7-edutel.log

# temp folder example
#logging.file: ${java.io.tmpdir}/app.log

#logging.pattern.file: %d %p %c{1.} [%t] %m%n

#logging.pattern.console: %d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n

## if no active profile, default is 'default'
##spring.profiles.active: prod

# root level
#logging.level.: INFO
